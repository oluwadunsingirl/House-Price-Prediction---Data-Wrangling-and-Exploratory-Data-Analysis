#split data 80% for training and 20% for testing the model
X = df.drop('price', axis=1)
y = df['price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 

#Using a baseline model building
model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print('r2 score:', r2_score(y_test, y_pred))
print('mse:', mean_squared_error(y_test, y_pred))

## r2 score = 0.6529242642153185
mse: 1754318687330.6633
- An r2 score of 0.6529242642153185 meaning that, the baseline model linear regression explains 65% of the
varaince in price.
- the mse shows that the predictions still have large error (in millions), meaning the linear model struggles 
with capturing complex patterns.
